{"version":3,"sources":["components/organisms/common/EventCommon.tsx","helper/alertAndConfirm.ts"],"names":["ImageWrap","lazyDelayed","HeartContainer","emptyHeart","css","EventCommon","item","excute","lastItem","link","key","image","location","title","description","price","wishCount","reviewCount","score","isReservation","isWish","auth","useAuth","React","useState","heart","setHeart","SearchDomain","likeEvent","disLikeEvent","format","useCallback","count","number","parseInt","Math","floor","priceFormat","parsing","bold","pink","size","row","lightgray","eventClick","eventTracking","productInfo","openProduct","heartClick","user","rootStore","interactionStore","setIsAlert","needLoginMessage","window","href","borderBottom","onClick","space","as","HOME","productcode","index","url","fullWidth","left","ellipsis","column","weight","between","isWrap","icon","condition","isNaN","jsonIcon","heartIcon","loop","iconHeight","iconWidth","memo"],"mappings":"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","file":"static/js/4.4974333b.chunk.js","sourcesContent":["import { Column, Row } from \"components/atoms/Grid\";\nimport { Icon, InteractionIcon } from \"components/atoms\";\nimport { Space, SpaceContainer } from \"components/atoms/Spacing\";\nimport { AxiosResponse } from \"axios\";\nimport { HOME } from \"constantDatas/api\";\nimport { NumberText } from \"components/atoms/Typo/Typo\";\nimport React, { useCallback } from \"react\";\nimport { SearchDomain } from \"pages/main/MainDomain\";\nimport { Text } from \"components/atoms/Message\";\nimport { ToggleEvent } from \"components/molecules\";\n/** @jsxImportSource @emotion/react */\nimport { css } from \"@emotion/react\";\nimport heartIcon from \"assets/jsonIcons/heart.json\";\nimport styled from \"@emotion/styled/macro\";\nimport { useAuth } from \"hooks\";\nimport { openProduct } from \"services/utils/analystics/googleAnalystics\";\nimport { eventTracking } from \"services/utils/analystics/amplitude\";\nimport { OnlyTruthyShow } from \"components/molecules/isShowEventWrap/isShowEvent\";\nimport { needLoginAlert } from \"helper/alertAndConfirm\";\nimport { lazyDelayed } from \"helper/lazyHelper\";\nconst ImageWrap = lazyDelayed(\n\timport(\"components/molecules/imageWrap/ImageWrap\")\n);\nconst HeartContainer = styled.div`\n\tjustify-content: flex-end;\n\tdisplay: flex;\n\tmargin-right: 2.12px;\n\tcursor: pointer;\n\tposition: absolute;\n\tpadding: 7px;\n\twidth: 50px;\n\theight: 50px;\n\tz-index: 9;\n\ttop: -8px;\n\tright: 0;\n`;\nconst emptyHeart = css`\n\twidth: 26.22px;\n\theight: 26px;\n\tmargin: -2px 1px 0px 0;\n`;\n\nconst EventCommon = ({\n\titem,\n\texcute,\n\tlastItem,\n}: {\n\titem: AxiosResponse[\"data\"];\n\texcute?: (index: number) => void;\n\tlastItem: string;\n}) => {\n\tconst {\n\t\tlink,\n\t\tkey,\n\t\timage,\n\t\tlocation,\n\t\ttitle,\n\t\tdescription,\n\t\tprice,\n\t\twishCount,\n\t\treviewCount,\n\t\tscore,\n\t\tisReservation,\n\t\tisWish,\n\t} = item;\n\n\tconst auth = useAuth();\n\tconst [heart, setHeart] = React.useState(isWish);\n\tconst { likeEvent, disLikeEvent } = SearchDomain();\n\n\tconst format = useCallback(\n\t\t(count: string) => {\n\t\t\tconst number = parseInt(count);\n\t\t\tswitch (true) {\n\t\t\t\tcase number < 100:\n\t\t\t\t\treturn number;\n\t\t\t\tcase number >= 100 && number < 1000:\n\t\t\t\t\treturn `${Math.floor(number / 100)}백+`;\n\t\t\t\tcase number >= 1000 && number < 10000:\n\t\t\t\t\treturn `${Math.floor(number / 1000)}천+`;\n\t\t\t\tcase number >= 10000:\n\t\t\t\t\treturn `${Math.floor(number / 10000)}만+`;\n\t\t\t}\n\t\t},\n\t\t[wishCount, reviewCount]\n\t);\n\n\tconst priceFormat = useCallback(\n\t\t(price: string) => {\n\t\t\tconst parsing = parseInt(price);\n\n\t\t\treturn (\n\t\t\t\t<Row>\n\t\t\t\t\t<NumberText bold pink size={15}>\n\t\t\t\t\t\t{parsing / 10000}\n\t\t\t\t\t</NumberText>\n\t\t\t\t\t<Space row={4} />\n\t\t\t\t\t<Text size={15} lightgray>\n\t\t\t\t\t\t만원\n\t\t\t\t\t</Text>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t},\n\t\t[price]\n\t);\n\tconst eventClick = useCallback(() => {\n\t\teventTracking(\"여신 이벤트 상품 클릭\", {\n\t\t\tproductInfo: `${title}_${location}`,\n\t\t});\n\t\topenProduct(`${title}_${location}`);\n\t}, [title, location]);\n\n\tconst heartClick = useCallback(() => {\n\t\tauth.user()\n\t\t\t? (!heart ? likeEvent(key) : disLikeEvent(key), setHeart(!heart))\n\t\t\t: needLoginAlert();\n\t}, [heart]);\n\n\treturn (\n\t\t<SpaceContainer\n\t\t\tborderBottom={\"#f7f7f7\"}\n\t\t\tcss={css`\n\t\t\t\tposition: relative;\n\t\t\t\tpadding-bottom: 14px;\n\t\t\t\tmargin-top: 14px;\n\t\t\t`}\n\t\t\tonClick={eventClick}\n\t\t>\n\t\t\t<Row space={[0, 16]} as=\"a\" href={`${HOME}/${link}`}>\n\t\t\t\t<ImageWrap\n\t\t\t\t\tlastItem={lastItem}\n\t\t\t\t\tproductcode={key}\n\t\t\t\t\texcute={(index: number) => excute && excute(index)}\n\t\t\t\t\turl={image}\n\t\t\t\t/>\n\t\t\t\t<Space />\n\t\t\t\t<Column fullWidth>\n\t\t\t\t\t<Row>\n\t\t\t\t\t\t<Column>\n\t\t\t\t\t\t\t<Text left lightgray size={11} ellipsis>\n\t\t\t\t\t\t\t\t{location}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t<Space column={6} />\n\t\t\t\t\t\t\t<Text left ellipsis weight={500}>\n\t\t\t\t\t\t\t\t{title}\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</Column>\n\t\t\t\t\t\t<SpaceContainer row={10} column={10} />\n\t\t\t\t\t</Row>\n\n\t\t\t\t\t<Text left size={11} lightgray ellipsis>\n\t\t\t\t\t\t{description}\n\t\t\t\t\t</Text>\n\t\t\t\t\t<Space column={2} />\n\t\t\t\t\t{priceFormat(price)}\n\t\t\t\t\t<Row between isWrap>\n\t\t\t\t\t\t<Row isWrap>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Icon icon=\"fillLike\" />\n\t\t\t\t\t\t\t\t<NumberText bold size={11}>\n\t\t\t\t\t\t\t\t\t{format(wishCount)}\n\t\t\t\t\t\t\t\t</NumberText>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<SpaceContainer row={8}>\n\t\t\t\t\t\t\t\t<OnlyTruthyShow condition={parseInt(reviewCount) > 0}>\n\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Text size={11} lightgray>\n\t\t\t\t\t\t\t\t\t\t\t리뷰\n\t\t\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t\t\t\t<Space row={3} />\n\t\t\t\t\t\t\t\t\t\t<NumberText size={11} bold>\n\t\t\t\t\t\t\t\t\t\t\t{format(reviewCount)}\n\t\t\t\t\t\t\t\t\t\t</NumberText>\n\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t</OnlyTruthyShow>\n\t\t\t\t\t\t\t</SpaceContainer>\n\t\t\t\t\t\t\t<OnlyTruthyShow condition={!isNaN(score)}>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t<Icon size={18} icon=\"star\" />\n\t\t\t\t\t\t\t\t\t<Space row={2} />\n\t\t\t\t\t\t\t\t\t<NumberText size={11} bold>\n\t\t\t\t\t\t\t\t\t\t{score}\n\t\t\t\t\t\t\t\t\t</NumberText>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t</OnlyTruthyShow>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t<OnlyTruthyShow condition={isReservation}>\n\t\t\t\t\t\t\t<Text size={11} pink bold>\n\t\t\t\t\t\t\t\t모바일예약\n\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t</OnlyTruthyShow>\n\t\t\t\t\t</Row>\n\t\t\t\t</Column>\n\t\t\t</Row>\n\n\t\t\t<HeartContainer onClick={heartClick}>\n\t\t\t\t<ToggleEvent condition={heart}>\n\t\t\t\t\t<InteractionIcon\n\t\t\t\t\t\tjsonIcon={heartIcon}\n\t\t\t\t\t\tloop={false}\n\t\t\t\t\t\ticonHeight={\"23\"}\n\t\t\t\t\t\ticonWidth={\"26\"}\n\t\t\t\t\t/>\n\t\t\t\t\t<Icon icon=\"emptyHeart\" size={18} css={emptyHeart}></Icon>\n\t\t\t\t</ToggleEvent>\n\t\t\t</HeartContainer>\n\t\t</SpaceContainer>\n\t);\n};\n\nexport default React.memo(EventCommon);\n","import {\n\tneedLoginMessage,\n\tregistSuccessMessage,\n} from \"constantDatas/serviceMessage\";\nimport { rootStore } from \"models/RootStore\";\n\nexport const needLoginAlert = () => {\n\tconst store = rootStore;\n\treturn store.interactionStore.setIsAlert(\n\t\tneedLoginMessage,\n\t\t() => (window.location.href = \"/login\")\n\t);\n};\nexport const customAlert = (msg: string) => {\n\tconst store = rootStore;\n\treturn store.interactionStore.setIsAlert(msg);\n};\n\nexport const registerAlert = () => {\n\tconst store = rootStore;\n\treturn store.interactionStore.setIsAlert(registSuccessMessage);\n};\n"],"sourceRoot":""}